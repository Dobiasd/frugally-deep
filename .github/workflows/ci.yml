name: ci

on: [workflow_dispatch, push, pull_request]

jobs:
  build_gcc:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@main
      - name: Setup
        run: |
          # system libs
          sudo apt-get install libblas-dev liblapack-dev libatlas-base-dev gfortran
          # python libs
          sudo pip3 install --upgrade pip
          sudo pip3 install numpy scipy h5py "tensorflow==2.18.0" "keras==3.8.0"
          echo "Python version:"
          python3 --version
          echo "Version numbers of TensorFlow and Keras:"
          python3 -c "import tensorflow as tf; import tensorflow; import keras; print(tf.__version__); print(keras.__version__)"
          # FunctionalPlus
          git clone -b 'v0.2.24' --single-branch --depth 1 https://github.com/Dobiasd/FunctionalPlus
          cd FunctionalPlus
          mkdir -p build && cd build
          cmake ..
          make && sudo make install
          cd ../..
          # Eigen
          git clone -b '3.4.0' --single-branch --depth 1 https://gitlab.com/libeigen/eigen.git
          cd eigen
          mkdir -p build && cd build
          cmake ..
          make && sudo make install
          sudo ln -s /usr/local/include/eigen3/Eigen /usr/local/include/Eigen
          cd ../..
          # json
          git clone -b 'v3.11.3' --single-branch --depth 1 https://github.com/nlohmann/json
          cd json
          mkdir -p build && cd build
          cmake -DJSON_BuildTests=OFF ..
          make && sudo make install
          cd ../..
          # Doctest
          git clone -b 'v2.4.11' --single-branch --depth 1 https://github.com/onqtam/doctest.git
          cd doctest
          mkdir -p build && cd build
          cmake .. -DDOCTEST_WITH_TESTS=OFF -DDOCTEST_WITH_MAIN_IN_STATIC_LIB=OFF
          make && sudo make install
          cd ../..
      - name: Build
        run: |
          # run unit tests
          mkdir -p build && cd build
          which g++
          g++ --version
          cmake .. -DFDEEP_BUILD_UNITTEST=ON
          cmake --build . --target unittest --config Release --
          cd ..


  formatting-check:
    name: "formatting"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
      - uses: DoozyX/clang-format-lint-action@master
        name: "Verify formatting"
        with:
          clangFormatVersion: 16
